#!/bin/sh

SPRITEDESC_CONV=$(which spritedesc-conv)

if [ -z "$SPRITEDESC_CONV" ]
then
    SPRITEDESC_CONV="$(pwd)/$(echo $0 | sed 's:[^/]\+$:spritedesc-conv:')"
fi

# Search a file named common.scm recursively up to the root of the filesystem.
# param 1: The relative path where the file is searched.
# param 2: How many times we can go in the parent folders
#
# If the file is not in $1 then it is searched in ../$1.
#
search_common_scm() {

    RELATIVE_PATH="$1"
    CANDIDATE="$RELATIVE_PATH/common.scm"
    SLASH_COUNT="$2"

    if [ -f "$CANDIDATE" ]
    then
        echo $CANDIDATE
    elif [ $SLASH_COUNT -gt 0 ]
    then
        search_common_scm "../$RELATIVE_PATH" $(expr $SLASH_COUNT - 1 )
    else
        echo "Cannot find common.scm" 1>&2
        exit 1
    fi
} # search_common_scm()

# Search a file named common.scm recursively up to the root of the filesystem.
path_to_common_scm() {

    search_common_scm "." $(pwd | tr -d -c '/' | wc -c)
} # path_to_common_scm()

# Generate the informations about an xcf file in the format expected by
# spritedesc-conv.
# param 1 The name of the xcf file to read
#
generate_xcf_info() {
    XCF_FILE="$1"

    echo "$XCF_FILE"

    xcfinfo "$XCF_FILE" \
        | head -n 1 \
        | sed 's:^[^,]\+, \([0-9]\+\)x\([0-9]\+\)[^,]\+, \([0-9]\+\).\+$:\1 \2 \3:'

    xcfinfo "$XCF_FILE" \
        | tail -n +2 \
        | sed 's:^[-+] \([0-9]\+\)x\([0-9]\+\)\([-+][0-9]\+\)\([-+][0-9]\+\)\( [^ ]\+\)\{2\} \(.\+\)$:\1 \2 \3 \4 \6:'
} # generate_xcf_info()

# Find all the xcf files used in a given text file.
# param 1: The file in which the names are searched.
#
get_xcf_names() {

    grep '\.xcf\(.bz2\)\?"' "$1" \
        | sed 's:[^"]*"\([^"]\+\.xcf\(\.bz2\)\?\)"[^"]*:\1 :g'
} # get_xcf_names()

DESC_FILE="$1"
shift
INITIAL_DIR="$(pwd)"

if echo "$DESC_FILE" | grep '/' > /dev/null
then
    cd $(echo "$DESC_FILE" | sed 's:[^/]\+$::g')
    DESC_FILE=$(basename "$DESC_FILE")
fi

(
    echo "(load \"$(path_to_common_scm)\")"

    (
        get_xcf_names "$DESC_FILE" \
            | while read XCF_FILE
            do
              generate_xcf_info "$XCF_FILE"
            done
    ) | "$SPRITEDESC_CONV" $@ "$DESC_FILE"

    echo "(gimp-quit 1)"
) | gimp-console -b -
